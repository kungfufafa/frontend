// Mocks generated by Mockito 5.4.6 from annotations
// in frontend/test/unit/controllers/create_tiket_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:frontend/app/data/models/tiket_model.dart' as _i4;
import 'package:frontend/app/modules/tikets/controllers/tikets_controller.dart'
    as _i3;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxList_0<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxBool_1 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxString_2 extends _i1.SmartFake implements _i2.RxString {
  _FakeRxString_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxInt_3 extends _i1.SmartFake implements _i2.RxInt {
  _FakeRxInt_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRx_4<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInternalFinalCallback_5<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TiketsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockTiketsController extends _i1.Mock implements _i3.TiketsController {
  @override
  _i2.RxList<_i4.Tiket> get tikets =>
      (super.noSuchMethod(
            Invocation.getter(#tikets),
            returnValue: _FakeRxList_0<_i4.Tiket>(
              this,
              Invocation.getter(#tikets),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i4.Tiket>(
              this,
              Invocation.getter(#tikets),
            ),
          )
          as _i2.RxList<_i4.Tiket>);

  @override
  _i2.RxList<_i4.Tiket> get filteredTikets =>
      (super.noSuchMethod(
            Invocation.getter(#filteredTikets),
            returnValue: _FakeRxList_0<_i4.Tiket>(
              this,
              Invocation.getter(#filteredTikets),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i4.Tiket>(
              this,
              Invocation.getter(#filteredTikets),
            ),
          )
          as _i2.RxList<_i4.Tiket>);

  @override
  _i2.RxBool get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: _FakeRxBool_1(this, Invocation.getter(#isLoading)),
            returnValueForMissingStub: _FakeRxBool_1(
              this,
              Invocation.getter(#isLoading),
            ),
          )
          as _i2.RxBool);

  @override
  _i2.RxBool get isLoadingMore =>
      (super.noSuchMethod(
            Invocation.getter(#isLoadingMore),
            returnValue: _FakeRxBool_1(this, Invocation.getter(#isLoadingMore)),
            returnValueForMissingStub: _FakeRxBool_1(
              this,
              Invocation.getter(#isLoadingMore),
            ),
          )
          as _i2.RxBool);

  @override
  _i2.RxString get errorMessage =>
      (super.noSuchMethod(
            Invocation.getter(#errorMessage),
            returnValue: _FakeRxString_2(
              this,
              Invocation.getter(#errorMessage),
            ),
            returnValueForMissingStub: _FakeRxString_2(
              this,
              Invocation.getter(#errorMessage),
            ),
          )
          as _i2.RxString);

  @override
  _i2.RxInt get selectedStatusId =>
      (super.noSuchMethod(
            Invocation.getter(#selectedStatusId),
            returnValue: _FakeRxInt_3(
              this,
              Invocation.getter(#selectedStatusId),
            ),
            returnValueForMissingStub: _FakeRxInt_3(
              this,
              Invocation.getter(#selectedStatusId),
            ),
          )
          as _i2.RxInt);

  @override
  _i2.RxInt get selectedUnitId =>
      (super.noSuchMethod(
            Invocation.getter(#selectedUnitId),
            returnValue: _FakeRxInt_3(this, Invocation.getter(#selectedUnitId)),
            returnValueForMissingStub: _FakeRxInt_3(
              this,
              Invocation.getter(#selectedUnitId),
            ),
          )
          as _i2.RxInt);

  @override
  _i2.RxString get selectedPriority =>
      (super.noSuchMethod(
            Invocation.getter(#selectedPriority),
            returnValue: _FakeRxString_2(
              this,
              Invocation.getter(#selectedPriority),
            ),
            returnValueForMissingStub: _FakeRxString_2(
              this,
              Invocation.getter(#selectedPriority),
            ),
          )
          as _i2.RxString);

  @override
  _i2.RxString get searchQuery =>
      (super.noSuchMethod(
            Invocation.getter(#searchQuery),
            returnValue: _FakeRxString_2(this, Invocation.getter(#searchQuery)),
            returnValueForMissingStub: _FakeRxString_2(
              this,
              Invocation.getter(#searchQuery),
            ),
          )
          as _i2.RxString);

  @override
  _i2.Rx<DateTime?> get dateFrom =>
      (super.noSuchMethod(
            Invocation.getter(#dateFrom),
            returnValue: _FakeRx_4<DateTime?>(
              this,
              Invocation.getter(#dateFrom),
            ),
            returnValueForMissingStub: _FakeRx_4<DateTime?>(
              this,
              Invocation.getter(#dateFrom),
            ),
          )
          as _i2.Rx<DateTime?>);

  @override
  _i2.Rx<DateTime?> get dateTo =>
      (super.noSuchMethod(
            Invocation.getter(#dateTo),
            returnValue: _FakeRx_4<DateTime?>(this, Invocation.getter(#dateTo)),
            returnValueForMissingStub: _FakeRx_4<DateTime?>(
              this,
              Invocation.getter(#dateTo),
            ),
          )
          as _i2.Rx<DateTime?>);

  @override
  _i2.RxString get sortBy =>
      (super.noSuchMethod(
            Invocation.getter(#sortBy),
            returnValue: _FakeRxString_2(this, Invocation.getter(#sortBy)),
            returnValueForMissingStub: _FakeRxString_2(
              this,
              Invocation.getter(#sortBy),
            ),
          )
          as _i2.RxString);

  @override
  _i2.RxString get sortOrder =>
      (super.noSuchMethod(
            Invocation.getter(#sortOrder),
            returnValue: _FakeRxString_2(this, Invocation.getter(#sortOrder)),
            returnValueForMissingStub: _FakeRxString_2(
              this,
              Invocation.getter(#sortOrder),
            ),
          )
          as _i2.RxString);

  @override
  _i2.RxInt get currentPage =>
      (super.noSuchMethod(
            Invocation.getter(#currentPage),
            returnValue: _FakeRxInt_3(this, Invocation.getter(#currentPage)),
            returnValueForMissingStub: _FakeRxInt_3(
              this,
              Invocation.getter(#currentPage),
            ),
          )
          as _i2.RxInt);

  @override
  _i2.RxInt get lastPage =>
      (super.noSuchMethod(
            Invocation.getter(#lastPage),
            returnValue: _FakeRxInt_3(this, Invocation.getter(#lastPage)),
            returnValueForMissingStub: _FakeRxInt_3(
              this,
              Invocation.getter(#lastPage),
            ),
          )
          as _i2.RxInt);

  @override
  _i2.RxInt get totalItems =>
      (super.noSuchMethod(
            Invocation.getter(#totalItems),
            returnValue: _FakeRxInt_3(this, Invocation.getter(#totalItems)),
            returnValueForMissingStub: _FakeRxInt_3(
              this,
              Invocation.getter(#totalItems),
            ),
          )
          as _i2.RxInt);

  @override
  _i2.RxList<_i4.Status> get statusOptions =>
      (super.noSuchMethod(
            Invocation.getter(#statusOptions),
            returnValue: _FakeRxList_0<_i4.Status>(
              this,
              Invocation.getter(#statusOptions),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i4.Status>(
              this,
              Invocation.getter(#statusOptions),
            ),
          )
          as _i2.RxList<_i4.Status>);

  @override
  _i2.RxList<_i4.Unit> get unitOptions =>
      (super.noSuchMethod(
            Invocation.getter(#unitOptions),
            returnValue: _FakeRxList_0<_i4.Unit>(
              this,
              Invocation.getter(#unitOptions),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i4.Unit>(
              this,
              Invocation.getter(#unitOptions),
            ),
          )
          as _i2.RxList<_i4.Unit>);

  @override
  List<Map<String, String>> get priorityOptions =>
      (super.noSuchMethod(
            Invocation.getter(#priorityOptions),
            returnValue: <Map<String, String>>[],
            returnValueForMissingStub: <Map<String, String>>[],
          )
          as List<Map<String, String>>);

  @override
  bool get isAdmin =>
      (super.noSuchMethod(
            Invocation.getter(#isAdmin),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isManager =>
      (super.noSuchMethod(
            Invocation.getter(#isManager),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isKaryawan =>
      (super.noSuchMethod(
            Invocation.getter(#isKaryawan),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isUser =>
      (super.noSuchMethod(
            Invocation.getter(#isUser),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isDireksi =>
      (super.noSuchMethod(
            Invocation.getter(#isDireksi),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i2.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(
            Invocation.getter(#onStart),
            returnValue: _FakeInternalFinalCallback_5<void>(
              this,
              Invocation.getter(#onStart),
            ),
            returnValueForMissingStub: _FakeInternalFinalCallback_5<void>(
              this,
              Invocation.getter(#onStart),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(
            Invocation.getter(#onDelete),
            returnValue: _FakeInternalFinalCallback_5<void>(
              this,
              Invocation.getter(#onDelete),
            ),
            returnValueForMissingStub: _FakeInternalFinalCallback_5<void>(
              this,
              Invocation.getter(#onDelete),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized =>
      (super.noSuchMethod(
            Invocation.getter(#initialized),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isClosed =>
      (super.noSuchMethod(
            Invocation.getter(#isClosed),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  int get listeners =>
      (super.noSuchMethod(
            Invocation.getter(#listeners),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  bool canEditTiket(_i4.Tiket? tiket) =>
      (super.noSuchMethod(
            Invocation.method(#canEditTiket, [tiket]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool canDeleteTiket(_i4.Tiket? tiket) =>
      (super.noSuchMethod(
            Invocation.method(#canDeleteTiket, [tiket]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool canAssignTiket(_i4.Tiket? tiket) =>
      (super.noSuchMethod(
            Invocation.method(#canAssignTiket, [tiket]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool canChangeStatus(_i4.Tiket? tiket) =>
      (super.noSuchMethod(
            Invocation.method(#canChangeStatus, [tiket]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  void onInit() => super.noSuchMethod(
    Invocation.method(#onInit, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadFilterOptions() =>
      (super.noSuchMethod(
            Invocation.method(#loadFilterOptions, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadTikets({bool? refresh = false}) =>
      (super.noSuchMethod(
            Invocation.method(#loadTikets, [], {#refresh: refresh}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void applyFilters() => super.noSuchMethod(
    Invocation.method(#applyFilters, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadMoreTikets() =>
      (super.noSuchMethod(
            Invocation.method(#loadMoreTikets, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTiket(int? tiketId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTiket, [tiketId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void setStatusFilter(int? statusId) => super.noSuchMethod(
    Invocation.method(#setStatusFilter, [statusId]),
    returnValueForMissingStub: null,
  );

  @override
  void setUnitFilter(int? unitId) => super.noSuchMethod(
    Invocation.method(#setUnitFilter, [unitId]),
    returnValueForMissingStub: null,
  );

  @override
  void setPriorityFilter(String? priority) => super.noSuchMethod(
    Invocation.method(#setPriorityFilter, [priority]),
    returnValueForMissingStub: null,
  );

  @override
  void setSearchQuery(String? query) => super.noSuchMethod(
    Invocation.method(#setSearchQuery, [query]),
    returnValueForMissingStub: null,
  );

  @override
  void setDateFrom(DateTime? date) => super.noSuchMethod(
    Invocation.method(#setDateFrom, [date]),
    returnValueForMissingStub: null,
  );

  @override
  void setDateTo(DateTime? date) => super.noSuchMethod(
    Invocation.method(#setDateTo, [date]),
    returnValueForMissingStub: null,
  );

  @override
  void setSorting(String? field, String? order) => super.noSuchMethod(
    Invocation.method(#setSorting, [field, order]),
    returnValueForMissingStub: null,
  );

  @override
  void clearFilters() => super.noSuchMethod(
    Invocation.method(#clearFilters, []),
    returnValueForMissingStub: null,
  );

  @override
  void navigateToDetail(_i4.Tiket? tiket) => super.noSuchMethod(
    Invocation.method(#navigateToDetail, [tiket]),
    returnValueForMissingStub: null,
  );

  @override
  void navigateToCreate() => super.noSuchMethod(
    Invocation.method(#navigateToCreate, []),
    returnValueForMissingStub: null,
  );

  @override
  void update([List<Object>? ids, bool? condition = true]) =>
      super.noSuchMethod(
        Invocation.method(#update, [ids, condition]),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
    Invocation.method(#onReady, []),
    returnValueForMissingStub: null,
  );

  @override
  void onClose() => super.noSuchMethod(
    Invocation.method(#onClose, []),
    returnValueForMissingStub: null,
  );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
    Invocation.method(#$configureLifeCycle, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Disposer addListener(_i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListener, [listener]),
            returnValue: () {},
            returnValueForMissingStub: () {},
          )
          as _i6.Disposer);

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
    Invocation.method(#refreshGroup, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyChildrens() => super.noSuchMethod(
    Invocation.method(#notifyChildrens, []),
    returnValueForMissingStub: null,
  );

  @override
  void removeListenerId(Object? id, _i7.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(#removeListenerId, [id, listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Disposer addListenerId(Object? key, _i6.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListenerId, [key, listener]),
            returnValue: () {},
            returnValueForMissingStub: () {},
          )
          as _i6.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
    Invocation.method(#disposeId, [id]),
    returnValueForMissingStub: null,
  );
}
